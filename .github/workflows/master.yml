name: Push To Master Workflow

on:
  push:
    branches:
      - master

jobs:
  build-and-publish:
    name: Get Version then Build and Publish to NuGet
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 8.0.x
      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: '6.4.x'
      - name: Determine Version
        id: version_step
        uses: gittools/actions/gitversion/execute@v4.1.0
      - name: Push New Version Tag
        run: |
          gv=${{ steps.version_step.outputs.majorMinorPatch }} #gitversion result
          lt=$( git describe --tags --abbrev=0 ) # last tag version result
          if [[ $gv != $lt ]]; then
            git tag $gv
            git push origin --tags
          fi
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -c Release -v n /p:Version=${{ steps.version_step.outputs.publishVersion }}
      - name: Publish
        run: dotnet nuget push ./Serilog.Sinks.XUnit3/bin/Release/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json